// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3140.Team3140Robot;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Solenoid gripperSolenoidOpen;
    public static Solenoid gripperSolenoidClose;
    public static Ultrasonic gripperUltrasonic1;
    public static Ultrasonic gripperUltrasonic2;
    public static SpeedController lifterSpeedController1;
    public static SpeedController tankDriveSpeedController1;
    public static SpeedController tankDriveSpeedController2;
    public static SpeedController tankDriveSpeedController3;
    public static SpeedController tankDriveSpeedController4;
    public static RobotDrive tankDriveRobotDrive;
    public static Gyro tankDriveGyro1;
    public static AnalogAccelerometer tankDriveAnalogAccelerometer1;
    public static Solenoid tankDriveSolenoidShiftUp;
    public static Solenoid tankDriveSolenoidShiftDown;
    public static Compressor pneumaticsCompressor1;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        gripperSolenoidOpen = new Solenoid(0, 0);
        LiveWindow.addActuator("Gripper", "SolenoidOpen", gripperSolenoidOpen);
        
        gripperSolenoidClose = new Solenoid(0, 2);
        LiveWindow.addActuator("Gripper", "SolenoidClose", gripperSolenoidClose);
        
        gripperUltrasonic1 = new Ultrasonic(0, 1);
        LiveWindow.addSensor("Gripper", "Ultrasonic 1", gripperUltrasonic1);
        
        gripperUltrasonic2 = new Ultrasonic(2, 3);
        LiveWindow.addSensor("Gripper", "Ultrasonic 2", gripperUltrasonic2);
        
        lifterSpeedController1 = new Talon(4);
        LiveWindow.addActuator("Lifter", "Speed Controller 1", (Talon) lifterSpeedController1);
        
        tankDriveSpeedController1 = new Talon(0);
        LiveWindow.addActuator("Tank Drive", "Speed Controller 1", (Talon) tankDriveSpeedController1);
        
        tankDriveSpeedController2 = new Talon(1);
        LiveWindow.addActuator("Tank Drive", "Speed Controller 2", (Talon) tankDriveSpeedController2);
        
        tankDriveSpeedController3 = new Talon(2);
        LiveWindow.addActuator("Tank Drive", "Speed Controller 3", (Talon) tankDriveSpeedController3);
        
        tankDriveSpeedController4 = new Talon(3);
        LiveWindow.addActuator("Tank Drive", "Speed Controller 4", (Talon) tankDriveSpeedController4);
        
        tankDriveRobotDrive = new RobotDrive(tankDriveSpeedController1, tankDriveSpeedController2,
              tankDriveSpeedController3, tankDriveSpeedController4);
        
        tankDriveRobotDrive.setSafetyEnabled(true);
        tankDriveRobotDrive.setExpiration(0.1);
        tankDriveRobotDrive.setSensitivity(0.5);
        tankDriveRobotDrive.setMaxOutput(1.0);

        tankDriveGyro1 = new Gyro(0);
        LiveWindow.addSensor("Tank Drive", "Gyro 1", tankDriveGyro1);
        tankDriveGyro1.setSensitivity(0.007);
        tankDriveAnalogAccelerometer1 = new AnalogAccelerometer(1);
        LiveWindow.addSensor("Tank Drive", "AnalogAccelerometer 1", tankDriveAnalogAccelerometer1);
        tankDriveAnalogAccelerometer1.setSensitivity(0.0);
        tankDriveAnalogAccelerometer1.setZero(2.5);
        tankDriveSolenoidShiftUp = new Solenoid(0, 1);
        LiveWindow.addActuator("Tank Drive", "SolenoidShiftUp", tankDriveSolenoidShiftUp);
        
        tankDriveSolenoidShiftDown = new Solenoid(0, 3);
        LiveWindow.addActuator("Tank Drive", "SolenoidShiftDown", tankDriveSolenoidShiftDown);
        
        pneumaticsCompressor1 = new Compressor(0);
        
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
