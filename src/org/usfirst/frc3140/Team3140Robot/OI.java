// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3140.Team3140Robot;

import org.usfirst.frc3140.Team3140Robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.buttons.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton joystickButton1;
    public JoystickButton joystickButton2;
    public JoystickButton joystickButton3;
    public JoystickButton joystickButton4;
    public Joystick joystick1;
    public JoystickButton joystickButton5;
    public JoystickButton joystickButton6;
    public JoystickButton joystickButton7;
    public JoystickButton joystickButton8;
    public Joystick joystick2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick2 = new Joystick(1);
        
        joystickButton8 = new JoystickButton(joystick2, 1);
        joystickButton8.whenPressed(new SetDownon5());
        joystickButton7 = new JoystickButton(joystick2, 1);
        joystickButton7.whenPressed(new SetDownon4());
        joystickButton6 = new JoystickButton(joystick2, 1);
        joystickButton6.whenPressed(new SetDownon3());
        joystickButton5 = new JoystickButton(joystick2, 1);
        joystickButton5.whenPressed(new SetDownon2());
        joystick1 = new Joystick(0);
        
        joystickButton4 = new JoystickButton(joystick1, 1);
        joystickButton4.whenPressed(new SetDownon1());
        joystickButton3 = new JoystickButton(joystick1, 1);
        joystickButton3.whenPressed(new SetDownonGround());
        joystickButton2 = new JoystickButton(joystick1, 1);
        joystickButton2.whenPressed(new PickupAnother());
        joystickButton1 = new JoystickButton(joystick1, 1);
        joystickButton1.whenPressed(new Pickup1st());

	    
        // SmartDashboard Buttons
        SmartDashboard.putData("Drive", new Drive());

        SmartDashboard.putData("GrabberOpen", new GrabberOpen());

        SmartDashboard.putData("GrabberClose", new GrabberClose());

        SmartDashboard.putData("LIfterUp", new LIfterUp());

        SmartDashboard.putData("LifterDown", new LifterDown());

        SmartDashboard.putData("Pickup 1st", new Pickup1st());

        SmartDashboard.putData("Pickup Another", new PickupAnother());

        SmartDashboard.putData("Set Down on Ground", new SetDownonGround());

        SmartDashboard.putData("Set Down on 1", new SetDownon1());

        SmartDashboard.putData("Set Down on 2", new SetDownon2());

        SmartDashboard.putData("Set Down on 3", new SetDownon3());

        SmartDashboard.putData("Set Down on 4", new SetDownon4());

        SmartDashboard.putData("Set Down on 5", new SetDownon5());

        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick1() {
        return joystick1;
    }

    public Joystick getJoystick2() {
        return joystick2;
    }

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

